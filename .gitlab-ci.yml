image: docker:19.03.0
services:
    - docker:19.03.0-dind

# When using dind, it's wise to use the overlayfs driver for
# improved performance.
variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

stages:
    - distro

# Expects $IMAGE which should be the name+tag of the registry image.
# Expects $OCI_YML variable which should be the path to the dockerfile
# Expects $DIR variable which should be the name of the parrent folder of the dockerfile
.base_template: &base_build
    script:
        - cd ${DIR}
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker build --pull -f ${OCI_YML} -t ${IMAGE} .
        - docker images
        - |
          if [ "$CI_COMMIT_REF_NAME" = "master" ]; then
              docker push ${IMAGE}
          else
              echo "Not pushing image, as we are on non-master branch $CI_COMMIT_REF_NAME"
          fi

# Expects $ARCH variable which should be the architexcture of the image ex. x86_64
# Expects $DISTRO_NAME variable which should be the name of the distro image ex. ubuntu
# Expects $DISTRO_VER variable which should be the version distro image ex. 18.04
# Expects $OCI_YML variable which should be the path to the dockerfile
.distro_template: &distro_build
    stage: distro
    before_script:
        - export NAMESPACE="$(echo "${CI_PROJECT_NAMESPACE}" | tr A-Z a-z)"
        - export IMAGE=${CI_REGISTRY}/${NAMESPACE}/${CI_PROJECT_NAME}/${ARCH}/${DISTRO_NAME}:${DISTRO_VER}
    interruptible: true
    <<: *base_build

fedora:latest:
    variables:
      ARCH: "amd64"
      DISTRO_NAME: "fedora"
      DISTRO_VER: "latest"
      OCI_YML: "latest.yml"
      DIR: "fedora"

    <<: *distro_build
